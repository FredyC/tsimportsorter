{
  "name": "tsimportsorter",
  "displayName": "JS/TS Import Sorter",
  "description": "Auto format imports for JavaScript and TypeScript.",
  "icon": "assets/icons/main.jpg",
  "publisher": "dozerg",
  "version": "1.2.11",
  "scripts": {
    "vscode:prepublish": "rm -rf out && git pull && npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js"
  },
  "homepage": "https://github.com/daidodo/tsimportsorter",
  "repository": {
    "type": "git",
    "url": "https://github.com/daidodo/tsimportsorter"
  },
  "bugs": {
    "url": "https://github.com/daidodo/tsimportsorter/issues"
  },
  "engines": {
    "vscode": "^1.44.0"
  },
  "categories": [
    "Formatters"
  ],
  "keywords": [
    "javascript",
    "typescript",
    "import",
    "import sort",
    "sort import",
    "multi-root ready"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:javascriptreact",
    "onLanguage:typescript",
    "onLanguage:typescriptreact",
    "onCommand:tsImportSorter.command.sortImports"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "menus": {
      "commandPalette": [
        {
          "command": "tsImportSorter.command.sortImports",
          "when": "editorLangId==javascript || editorLangId==javascriptreact || editorLangId==typescript || editorLangId==typescriptreact"
        }
      ],
      "editor/context": [
        {
          "command": "tsImportSorter.command.sortImports",
          "group": "1_modification",
          "when": "resourceLangId==javascript || resourceLangId==javascriptreact || resourceLangId==typescript || resourceLangId==typescriptreact"
        }
      ]
    },
    "keybindings": [
      {
        "command": "tsImportSorter.command.sortImports",
        "key": "alt+shift+s",
        "when": "editorTextFocus"
      }
    ],
    "commands": [
      {
        "command": "tsImportSorter.command.sortImports",
        "title": "Sort Imports"
      }
    ],
    "configuration": {
      "title": "JS/TS Import Sorter configuration",
      "properties": {
        "tsImportSorter.configuration.configurationFileName": {
          "type": "string",
          "default": "import-sorter.json",
          "description": "Configuration file name."
        },
        "tsImportSorter.configuration.autoFormat": {
          "type": "string",
          "enum": [
            "off",
            "onSave"
          ],
          "default": "onSave",
          "description": "When to auto format imports.",
          "enumDescriptions": [
            "Never auto format imports.",
            "Auto format imports on save."
          ]
        },
        "tsImportSorter.configuration.exclude": {
          "type": "array",
          "default": [
            "node_modules"
          ],
          "items": {
            "type": "string"
          },
          "description": "Disable formatting for files matching regular expressions."
        },
        "tsImportSorter.configuration.excludeGlob": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Disable formatting for files matching glob patterns."
        },
        "tsImportSorter.configuration.groupRules": {
          "type": "array",
          "default": [
            "^react(-dom)?$",
            "^@angular/",
            "^vue$",
            {},
            "^[@]",
            "^[.]"
          ],
          "items": {
            "type": [
              "string",
              "array",
              "object"
            ]
          },
          "markdownDescription": "Grouping rules for path patterns. See the [wiki](https://github.com/daidodo/tsimportsorter/wiki/Grouping-Rules) for more details."
        },
        "tsImportSorter.configuration.sortRules.paths": {
          "type": [
            "string",
            "array"
          ],
          "default": [
            "_",
            "aA"
          ],
          "items": {
            "type": "string",
            "enum": [
              "az",
              "AZ",
              "aA",
              "Aa",
              "_"
            ]
          },
          "markdownDescription": "Sorting rule for import paths. See the [wiki](https://github.com/daidodo/tsimportsorter/wiki/Sorting-Rules) for more details."
        },
        "tsImportSorter.configuration.sortRules.names": {
          "type": [
            "string",
            "array"
          ],
          "default": [
            "_",
            "aA"
          ],
          "items": {
            "type": "string",
            "enum": [
              "az",
              "AZ",
              "aA",
              "Aa",
              "_"
            ]
          },
          "markdownDescription": "Sorting rule for imported names. See the [wiki](https://github.com/daidodo/tsimportsorter/wiki/Sorting-Rules) for more details."
        },
        "tsImportSorter.configuration.maximumBindingNamesPerLine": {
          "type": "number",
          "default": 1,
          "description": "Max binding names per line before wrapping. 0 for no limit."
        },
        "tsImportSorter.configuration.maximumDefaultAndBindingNamesPerLine": {
          "type": "number",
          "default": 2,
          "description": "Max default and binding names per line before wrapping. 0 for no limit."
        },
        "tsImportSorter.configuration.maximumNamesPerWrappedLine": {
          "type": "number",
          "default": 1,
          "description": "Max names on wrapped lines. 0 for no limit."
        }
      }
    }
  },
  "dependencies": {
    "editorconfig": "^0.15.3",
    "lodash.clonedeep": "^4.5.0",
    "minimatch": "^3.0.4",
    "prettier": "^1.19.1",
    "typescript": "^3.8.3"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/lodash.clonedeep": "^4.5.6",
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.12.35",
    "@types/prettier": "^1.19.1",
    "@types/vscode": "^1.44.0",
    "@typescript-eslint/eslint-plugin": "^2.27.0",
    "@typescript-eslint/parser": "^2.27.0",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.10.1",
    "eslint-plugin-tsdoc": "^0.2.4",
    "glob": "^7.1.6",
    "mocha": "^6.2.3",
    "utility-types": "^3.10.0",
    "vscode-test": "^1.3.0"
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "all",
    "printWidth": 100
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "tsconfigRootDir": "./",
      "project": [
        "./tsconfig.json"
      ]
    },
    "plugins": [
      "@typescript-eslint",
      "eslint-plugin-tsdoc"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:@typescript-eslint/recommended-requiring-type-checking",
      "prettier/@typescript-eslint"
    ],
    "ignorePatterns": [
      "src/test/suite/examples/**/*.ts"
    ],
    "rules": {
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/no-use-before-define": [
        "error",
        {
          "functions": false,
          "classes": false
        }
      ],
      "no-unused-vars": "off",
      "@typescript-eslint/no-unused-vars": [
        "warn",
        {
          "varsIgnorePattern": "^_",
          "argsIgnorePattern": "^_",
          "ignoreRestSiblings": true
        }
      ],
      "tsdoc/syntax": "warn"
    }
  },
  "importSorter": {
    "excludeGlob": [
      "**/test/suite/examples/**/?(*.)origin.ts?(x)",
      "**/test/suite/examples/**/?(*.)origin.js?(x)"
    ]
  }
}
