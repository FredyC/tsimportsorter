{
  "name": "tsimportsorter",
  "displayName": "TsImportSorter",
  "description": "Help sort imports for TypeScript.",
  "version": "0.0.1",
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js"
  },
  "engines": {
    "vscode": "^1.41.0"
  },
  "categories": [
    "Formatters"
  ],
  "keywords": [
    "Typescript",
    "imports",
    "sort",
    "order",
    "sort imports"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:javascriptreact",
    "onLanguage:typescript",
    "onLanguage:typescriptreact"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "",
      "properties": {
        "tsImportSorter.generalConfiguration.configurationFileName": {
          "type": "string",
          "default": "import-sorter.json",
          "description": "Default file configuration name"
        },
        "tsImportSorter.generalConfiguration.exclude": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Excludes sorting for files which match given regex expression. Regex considers the whole file path. The file path separator is normalized to '/'"
        },
        "tsImportSorter.sortConfiguration.customOrderingRules.rules": {
          "type": "array",
          "default": [
            {
              "regex": "^react$",
              "orderLevel": 10
            },
            {
              "regex": "^[@]",
              "orderLevel": 30
            },
            {
              "regex": "^[.]",
              "orderLevel": 40
            }
          ],
          "description": "Custom grouping levels of different import path patterns. Everything else has a default level of 20"
        },
        "tsImportSorter.importStringConfiguration.maximumLineLength": {
          "type": "number",
          "default": 0,
          "description": "The count of characters before import is new-lined. 0 for no limit."
        },
        "tsImportSorter.importStringConfiguration.maximumWords": {
          "type": "number",
          "default": 1,
          "description": "The count of words before import is new-lined. 0 for no limit."
        },
        "tsImportSorter.importStringConfiguration.tabSize": {
          "type": "number",
          "default": 2,
          "description": "Left number of spaces for the new lined imports. If tabType is set to 'tab', then the configuration defines the size of the tab in number of spaces"
        },
        "tsImportSorter.importStringConfiguration.tabType": {
          "enum": [
            "space",
            "tab"
          ],
          "default": "space",
          "description": "Defines the character which will be printed on each new lined import expression"
        },
        "tsImportSorter.importStringConfiguration.quoteMark": {
          "enum": [
            "single",
            "double"
          ],
          "default": "single",
          "description": "The path quotes"
        },
        "tsImportSorter.importStringConfiguration.trailingComma": {
          "enum": [
            "none",
            "multiLine"
          ],
          "default": "multiLine",
          "description": "If 'multiLine' then adds a trailing comma at the end of the imports for multi-line imports."
        },
        "tsImportSorter.importStringConfiguration.hasSemicolon": {
          "type": "boolean",
          "default": true,
          "description": "If true then the import string has a semicolon at the end, otherwise it will not be appended. Default is true"
        }
      }
    }
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/lodash": "^4.14.149",
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.41.0",
    "@typescript-eslint/eslint-plugin": "^2.15.0",
    "@typescript-eslint/parser": "^2.15.0",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.9.0",
    "eslint-plugin-tsdoc": "^0.2.0",
    "glob": "^7.1.6",
    "lodash": "^4.17.15",
    "mocha": "^6.2.2",
    "prettier": "^1.19.1",
    "rxjs": "^6.5.4",
    "tslint": "^5.20.0",
    "typescript": "^3.6.4",
    "vscode-test": "^1.2.2"
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "all",
    "printWidth": 100
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "tsconfigRootDir": "./",
      "project": [
        "./tsconfig.json"
      ]
    },
    "plugins": [
      "@typescript-eslint",
      "eslint-plugin-tsdoc"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:@typescript-eslint/recommended-requiring-type-checking",
      "prettier/@typescript-eslint"
    ],
    "ignorePatterns": [
      "*.spec.*"
    ],
    "rules": {
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/no-use-before-define": [
        "error",
        {
          "functions": false,
          "classes": false
        }
      ],
      "tsdoc/syntax": "warn"
    }
  }
}
