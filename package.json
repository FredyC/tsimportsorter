{
  "name": "tsimportsorter",
  "displayName": "TS Import Sorter",
  "description": "Help sort imports for TypeScript.",
  "icon": "assets/icons/main.jpg",
  "publisher": "dozerg",
  "version": "0.0.4",
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/daidodo/tsimportsorter.git"
  },
  "engines": {
    "vscode": "^1.41.0"
  },
  "categories": [
    "Formatters"
  ],
  "keywords": [
    "Typescript",
    "imports",
    "sort",
    "order",
    "sort imports"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:javascriptreact",
    "onLanguage:typescript",
    "onLanguage:typescriptreact"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "TS Import Sorter configuration",
      "properties": {
        "tsImportSorter.configuration.configurationFileName": {
          "type": "string",
          "default": "import-sorter.json",
          "description": "Configuration file name."
        },
        "tsImportSorter.configuration.exclude": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Disable sorting for files matching regex expressions."
        },
        "tsImportSorter.configuration.groupRules.": {
          "type": "array",
          "default": [
            {
              "regex": "^react$",
              "level": 10
            },
            {
              "regex": "^[@]",
              "level": 30
            },
            {
              "regex": "^[.]",
              "level": 40
            }
          ],
          "description": "Grouping rules for path patterns. Everything else has a default level of 20."
        },
        "tsImportSorter.configuration.maximumLineLength": {
          "type": "number",
          "default": 100,
          "description": "Maximum line length before binding names are wrapped. 0 for no limit."
        },
        "tsImportSorter.configuration.maximumWordsPerLine": {
          "type": "number",
          "default": 1,
          "description": "Maximum words per line before binding names are wrapped. 0 for no limit."
        },
        "tsImportSorter.configuration.tabSize": {
          "type": "number",
          "default": 2,
          "description": "Number of spaces to replace a TAB."
        },
        "tsImportSorter.configuration.tabType": {
          "enum": [
            "space",
            "tab"
          ],
          "default": "space",
          "description": "If set to \"tab\", TAB will be kept. If set to \"space\", TAB will be replaced by SPACEs."
        },
        "tsImportSorter.configuration.quoteMark": {
          "enum": [
            "single",
            "double"
          ],
          "default": "single",
          "description": "If set to \"single\", 'path' will be used to quote paths. If set to \"double\", \"path\" will be used to quote paths."
        },
        "tsImportSorter.configuration.trailingComma": {
          "enum": [
            "none",
            "multiLine"
          ],
          "default": "multiLine",
          "description": "If set to \"multiLine\", there will be a comma after the last binding name in a new line. Or \"none\" for no comma."
        },
        "tsImportSorter.configuration.hasSemicolon": {
          "type": "boolean",
          "default": true,
          "description": "Whether there is a semicolon at the end of import declarations."
        }
      }
    }
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/lodash": "^4.14.149",
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.41.0",
    "@typescript-eslint/eslint-plugin": "^2.15.0",
    "@typescript-eslint/parser": "^2.15.0",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.9.0",
    "eslint-plugin-tsdoc": "^0.2.0",
    "glob": "^7.1.6",
    "lodash": "^4.17.15",
    "mocha": "^6.2.2",
    "prettier": "^1.19.1",
    "rxjs": "^6.5.4",
    "tslint": "^5.20.0",
    "typescript": "^3.6.4",
    "vscode-test": "^1.2.2"
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "all",
    "printWidth": 100
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "tsconfigRootDir": "./",
      "project": [
        "./tsconfig.json"
      ]
    },
    "plugins": [
      "@typescript-eslint",
      "eslint-plugin-tsdoc"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:@typescript-eslint/recommended-requiring-type-checking",
      "prettier/@typescript-eslint"
    ],
    "ignorePatterns": [
      "*.spec.*"
    ],
    "rules": {
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/no-use-before-define": [
        "error",
        {
          "functions": false,
          "classes": false
        }
      ],
      "no-unused-vars": "off",
      "@typescript-eslint/no-unused-vars": [
        "warn",
        {
          "varsIgnorePattern": "^_",
          "argsIgnorePattern": "^_"
        }
      ],
      "tsdoc/syntax": "warn"
    }
  },
  "importSorter": {
    "exclude": [
      ".*src/test/suite/examples/.+"
    ]
  }
}
